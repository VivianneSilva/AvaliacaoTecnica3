// <auto-generated />
using ControleAcessoLivros.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleAcessoLivros.Migrations
{
    [DbContext(typeof(ControleAcessoLivrosContext))]
    [Migration("20220530163032_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleAcessoLivros.Models.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAutor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorId");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Leitor", b =>
                {
                    b.Property<int>("LeitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeLeitor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Telefone")
                        .HasColumnType("float");

                    b.HasKey("LeitorId");

                    b.ToTable("Leitor");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Leitura", b =>
                {
                    b.Property<int>("LeituraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeitorId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int>("StatusLivroId")
                        .HasColumnType("int");

                    b.HasKey("LeituraId");

                    b.HasIndex("LeitorId");

                    b.HasIndex("LivroId")
                        .IsUnique();

                    b.HasIndex("StatusLivroId");

                    b.ToTable("Leitura");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeLivro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LivroId");

                    b.HasIndex("AutorId");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.StatusLivro", b =>
                {
                    b.Property<int>("StatusLivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusLivroId");

                    b.ToTable("StatusLivro");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Leitura", b =>
                {
                    b.HasOne("ControleAcessoLivros.Models.Leitor", "Leitor")
                        .WithMany("leituras")
                        .HasForeignKey("LeitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcessoLivros.Models.Livro", "Livro")
                        .WithOne("Leitura")
                        .HasForeignKey("ControleAcessoLivros.Models.Leitura", "LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcessoLivros.Models.StatusLivro", "StatusLivro")
                        .WithMany("Leitura")
                        .HasForeignKey("StatusLivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leitor");

                    b.Navigation("Livro");

                    b.Navigation("StatusLivro");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Livro", b =>
                {
                    b.HasOne("ControleAcessoLivros.Models.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Leitor", b =>
                {
                    b.Navigation("leituras");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.Livro", b =>
                {
                    b.Navigation("Leitura");
                });

            modelBuilder.Entity("ControleAcessoLivros.Models.StatusLivro", b =>
                {
                    b.Navigation("Leitura");
                });
#pragma warning restore 612, 618
        }
    }
}
